<?xml version="1.0" encoding="UTF-8"?>
<project name="composer" default="update" xmlns:phpant.composer="composer.phpant.mleko">


	<!-- Read properties and init default values -->
	<dirname property="phpant.data.include.basedir" file="${ant.file.phpant}"/>
	<include file="${phpant.data.include.basedir}/common.xml"/>
	<target name="init" depends="common.init">
		<property name="phpant.config.composer.self-update" value="true"/>
		<property name="phpant.config.composer.self-update.age" value="604800"/>

		<property name="phpant.config.composer.phar" location="${basedir}/build/workdir/tools/composer.phar" relative="true"/>
	</target>

	<!-- ==== TARGETS ==== -->

	<!-- Check if composer already exists -->
	<target name="exists" depends="init">
		<available property="phpant.data.composer.exists" file="${phpant.config.composer.phar}"/>
	</target>

	<!-- Check composer age -->
	<target name="check-age" depends="init, check-age-tstamp" if="phpant.config.composer.self-update.age">

	</target>
	<target name="check-age-tstamp" depends="init">
		<local name="date"/>
		<local name="tempfile"/>
		<tstamp>
			<format property="date" offset="-${phpant.config.composer.self-update.age}" unit="second" pattern="MM/dd/yyyy hh:mm aa"/>
		</tstamp>
		<tempfile property="tempfile" createfile="true" prefix="~composerCheckAge" suffix=".tmp" deleteonexit="true"/>
		<touch file="${tempfile}" datetime="${date}"/>
		<uptodate property="composer.phar.upToDate" targetfile="${phpant.config.composer.phar}" srcfile="${tempfile}"/>
		<delete file="${tempfile}"/>
	</target>

	<!-- Self-update composer -->
	<target name="self-update" if="${phpant.config.composer.self-update}" unless="composer.phar.upToDate" description="Self-update Composer" depends="init, check-age">
		<phpant.composer:command>self-update</phpant.composer:command>
	</target>

	<!-- Create dir and install composer -->
	<target name="self-install" unless="phpant.data.composer.exists" depends='init, exists' description="Fetch Composer if it doesn't exist">
		<echo message="Installing composer" level="verbose"/>

		<local name="composer.phar.dir"/>
		<dirname property="composer.phar.dir" file="${phpant.config.composer.phar}"/>
		<mkdir dir="${composer.phar.dir}"/>

		<get src="https://getcomposer.org/composer.phar" dest="${phpant.config.composer.phar}" skipexisting="true"/>
		<chmod file="${phpant.config.composer.phar}" perm="0755"/>
		<echo message="composer installed" level="verbose"/>
	</target>

	<!-- Install dependencies -->
	<target name="install" depends="init, self-install, self-update" description="Install project dependencies">
		<phpant.composer:command options="--optimize-autoloader">install</phpant.composer:command>
	</target>

	<target name="update" depends="init, self-install, self-update" description="Install/update project dependencies">
		<phpant.composer:command options="--optimize-autoloader">update</phpant.composer:command>
	</target>

	<!-- Macro simplifying use of composer -->
	<macrodef name="command" uri="composer.phpant.mleko">
		<text name="command"/>
		<attribute name="options" default=""/>
		<sequential>
			<local name="rel"/>
			<local name="full"/>
			<local name="opts"/>
			<property name="opts" value="--no-interaction @{options}"/>
			<property name="rel" value="${phpant.config.composer.phar}" relative="true"/>
			<property name="full" value="${basedir}/${rel}"/>
			<echo message="Run composer @{command}" level="verbose"/>
			<exec executable="/usr/bin/env">
				<arg line="php"/>
				<arg line="${full}"/>
				<arg line="${opts}"/>
				<arg value="@{command}"/>
			</exec>
			<echo message="composer @{command} ended" level="verbose"/>
		</sequential>
	</macrodef>
</project>
